#!/bin/zsh

TESTDIR=/tmp/cdt
TESTDIR_OLD=$TESTDIR/old
TESTDIR_NEW=$TESTDIR/new
TESTDIR_NEW_32=$TESTDIR/new32
TESTDIR_NEW_64=$TESTDIR/new64

OLD_CD=~/Unix/bin/class-dump
#OLD_CD=/bin/echo
NEW_CD=/Local/nygard/Products/Debug/class-dump

# Must be a version that supports --list-arches
ARCH_CD=/Local/nygard/Products/Debug/class-dump

FRAMEWORKS=(/System/Library/Frameworks/*.framework /System/Library/PrivateFrameworks/*.framework /Developer/Library/Frameworks/*.framework /Developer/Library/PrivateFrameworks/*.framework)
APPS=(/Applications/*.app /Applications/*/*.app /Applications/Utilities/*.app /Developer/Applications/*.app /Developer/Applications/*/*.app ~/Applications/*.app ~/Applications/*.app /System/Library/CoreServices/*.app)
BUNDLES=(/System/Library/CoreServices/*.bundle)
#/Volumes/BigData/TestApplications/*.app

# Uncomment these to just do iPhone frameowoks
#IPHONE_SDK=iPhoneOS2.0
#IPHONE_SDK=iPhoneOS2.1
#IPHONE_SDK=iPhoneOS2.2.1
#IPHONE_SDK=iPhoneOS2.2
#IPHONE_SDK=iPhoneOS3.0
#FRAMEWORKS=(/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/$IPHONE_SDK.sdk/System/Library/Frameworks/*.framework /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/$IPHONE_SDK.sdk/System/Library/PrivateFrameworks/*.framework)
#APPS=()

echo "Starting tests at `date`"
echo
echo -n "Old class-dump: " ; ls -al $OLD_CD
echo -n "New class-dump: " ; ls -al $NEW_CD
echo
echo "  Framework count: " `ls -ld $FRAMEWORKS | wc -l`
echo "Application count: " `ls -ld $APPS | wc -l`
echo "     Bundle count: " `ls -ld $BUNDLES | wc -l`
echo "            Total: " `ls -ld $FRAMEWORKS $APPS $BUNDLES | wc -l`

mkdir $TESTDIR $TESTDIR_OLD $TESTDIR_NEW

# arch = none check for FWAVCPrivate.framework, KAdminClient, Kernel, SyndicationUI

foreach i ($FRAMEWORKS) do
    echo $i `basename $i .framework`
    arches=(`$ARCH_CD --list-arches $i`)
    foreach arch ($arches) do
        if [ $arch = "none" ]; then
            $OLD_CD -s -t $i >& "$TESTDIR_OLD/`basename $i .framework`-framework.txt"
            $NEW_CD -s -t $i >& "$TESTDIR_NEW/`basename $i .framework`-framework.txt"
        else
            echo $arch
            $OLD_CD -s -t --arch $arch $i >& "$TESTDIR_OLD/`basename $i .framework`-$arch-framework.txt" &
            $NEW_CD -s -t --arch $arch $i >& "$TESTDIR_NEW/`basename $i .framework`-$arch-framework.txt"
        fi
    done
done

foreach i ($APPS) do
    echo $i `basename $i .app`
    arches=(`$ARCH_CD --list-arches $i`)
    foreach arch ($arches) do
        if [ $arch = "none" ]; then
            $OLD_CD -s -t $i >& "$TESTDIR_OLD/`basename $i .app`-app.txt"
            $NEW_CD -s -t $i >& "$TESTDIR_NEW/`basename $i .app`-app.txt"
        else
            echo $arch
            $OLD_CD -s -t --arch $arch $i >& "$TESTDIR_OLD/`basename $i .app`-$arch-app.txt" &
            $NEW_CD -s -t --arch $arch $i >& "$TESTDIR_NEW/`basename $i .app`-$arch-app.txt"
        fi
    done
done

foreach i ($BUNDLES) do
    echo $i `basename $i .bundle`
    arches=(`$ARCH_CD --list-arches $i`)
    foreach arch ($arches) do
        if [ $arch = "none" ]; then
            $OLD_CD -s -t $i >& "$TESTDIR_OLD/`basename $i .bundle`-bundle.txt"
            $NEW_CD -s -t $i >& "$TESTDIR_NEW/`basename $i .bundle`-bundle.txt"
        else
            echo $arch
            $OLD_CD -s -t --arch $arch $i >& "$TESTDIR_OLD/`basename $i .bundle`-$arch-bundle.txt" &
            $NEW_CD -s -t --arch $arch $i >& "$TESTDIR_NEW/`basename $i .bundle`-$arch-bundle.txt"
        fi
    done
done

# We can remove files that don't contain Objective-C runtime information.
# Need to jump through some hoops because of the cursed spaces in filenames, grr.
foreach i (/tmp/cdt/{old,new}/*.txt)
    grep -q "This file does not contain" $i
    if [ $? -eq 0 ]; then
        rm $i
    fi
end

## Set up comparisons of new 32-bit vs. 64-bit output
#foreach arch (ppc ppc7400 i386) do
#    foreach i ($TESTDIR_NEW/*-$arch-*) do
#        ln -s $i $TESTDIR_NEW_32
#    done
#done
#
#foreach arch (ppc64 x86_64) do
#    foreach i ($TESTDIR_NEW/*-$arch-*) do
#        ln -s $i $TESTDIR_NEW_64
#    done
#done

echo "Ended tests at `date`"
opendiff /tmp/cdt/old /tmp/cdt/new
